version: '3.8'

networks:
  app_network:
    driver: bridge

services:
  # nginx:
  #   build: ./frontend
  #   container_name: nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./certs/spotnet.xyz.chain.crt:/etc/nginx/spotnet.xyz.chain.crt:ro
  #     - ./certs/spotnet.xyz.key:/etc/nginx/spotnet.xyz.key:ro
  #   depends_on:
  #     - backend
  #   networks:
  #     - app_network

  backend:
    build: .
    restart: always
    command: flask run -p 8000
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "8000"
    networks:
      - app_network

  db:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: